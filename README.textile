"!https://travis-ci.org/hoffrocket/javasizer.png!":https://travis-ci.org/hoffrocket/javasizer

h2. Sizer.sizeof

h3. What is this?

A tool to measure memory usage of java objects at runtime by traversing the object graph and adding up the bytes for fields and objects.

h3. Why would anyone want to use this?

* Investigate a heap usage problems.  Profilers are good for looking at heap wide histograms and finding allocation hotspots, but can't easily drill down to specific objects.   Also, taking a heap dump usually requires halting execution.

* Planning.
** e.g. what's the memory overhead of caching X?

* Curiosity?

h3. Why another java object graph sizer?

I wanted a tool that met the following criteria:

* accuracy
* performance
* clear licensing (Apache License, 2.0)
* stability
* hosted in a public repo
* no dependencies

h3.  How to add to your project

You can either build from scratch using mvn:

# @git clone git://github.com/hoffrocket/javasizer.git@
# @mvn package@
# add @target/javasizer-VERSION.jar@ to your classpath

h3. How to use

Add this to your jvm arguments:
@--add-opens java.base/java.lang=ALL-UNNAMED@
@--add-opens java.base/java.util=ALL-UNNAMED@

@org.jh.Sizer.sizeof(root)@  will return the bytes used by the object graph.
